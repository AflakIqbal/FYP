{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\FYP\\\\Sawari\\\\Sawari\\\\client\\\\src\\\\component\\\\Sub-Admin\\\\Owner\\\\VehicleOwner.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentOwnerVehicle } from '../../../actions/Sub-Admin/OwnerProfile';\nimport VehicleItem from './VehicleItem';\nimport Spinner from '../layout/spinner';\n\nconst VehicleOwner = ({\n  getCurrentOwnerVehicle,\n  pro,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentOwnerVehicle(pro);\n  }, [getCurrentOwnerVehicle, pro]);\n  console.log('a ra hai');\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, loading ? Spinner : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(VehicleItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" \", Spinner, \" \"))));\n};\n\nVehicleOwner.propTypes = {\n  getCurrentOwnerVehicle: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getCurrentOwnerVehicle\n})(VehicleOwner);","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/component/Sub-Admin/Owner/VehicleOwner.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getCurrentOwnerVehicle","VehicleItem","Spinner","VehicleOwner","pro","profile","profiles","loading","console","log","length","map","_id","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBH,EAAAA,sBADoB;AAEpBI,EAAAA,GAFoB;AAGpBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAHW,CAAD,KAIf;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,sBAAsB,CAACI,GAAD,CAAtB;AACD,GAFQ,EAEN,CAACJ,sBAAD,EAAyBI,GAAzB,CAFM,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GACNL,OADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,CAACI,MAAT,GAAkB,CAAlB,GACCJ,QAAQ,CAACK,GAAT,CAAaN,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACO,GAA1B;AAA+B,IAAA,OAAO,EAAEP,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMH,OAAN,MANJ,CANF,CAJJ,CADF;AAwBD,CAnCD;;AAqCAC,YAAY,CAACU,SAAb,GAAyB;AACvBb,EAAAA,sBAAsB,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADhB;AAEvBV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBD;AAFH,CAAzB;;AAKA,MAAME,cAAc,GAAGC,KAAK,KAAK;AAC/Bb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADgB,CAAL,CAA5B;;AAIA,eAAeN,OAAO,CAACkB,cAAD,EAAiB;AAAEjB,EAAAA;AAAF,CAAjB,CAAP,CACbG,YADa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentOwnerVehicle } from '../../../actions/Sub-Admin/OwnerProfile';\r\nimport VehicleItem from './VehicleItem';\r\nimport Spinner from '../layout/spinner';\r\n\r\nconst VehicleOwner = ({\r\n  getCurrentOwnerVehicle,\r\n  pro,\r\n  profile: { profiles, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentOwnerVehicle(pro);\r\n  }, [getCurrentOwnerVehicle, pro]);\r\n\r\n  console.log('a ra hai');\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        Spinner\r\n      ) : (\r\n        <Fragment>\r\n          {/* <h1 className='large text-primary'>VehicleOwner</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with VehicleOwner\r\n          </p> */}\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <VehicleItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4> {Spinner} </h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nVehicleOwner.propTypes = {\r\n  getCurrentOwnerVehicle: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProp, { getCurrentOwnerVehicle })(\r\n  VehicleOwner\r\n);\r\n"]},"metadata":{},"sourceType":"module"}