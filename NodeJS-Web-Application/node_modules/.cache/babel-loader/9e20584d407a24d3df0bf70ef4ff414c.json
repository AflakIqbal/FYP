{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\FYP\\\\Sawari\\\\Sawari\\\\client\\\\src\\\\component\\\\Customer\\\\Customer.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/CustomerProfile';\nimport CustomerItem from './CustomerItem';\n\nconst Customer = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, loading ? 'spinner' : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Owners\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"Browse and connect with Owners\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(CustomerItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Browsing...... \"))));\n};\n\nCustomer.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getProfiles\n})(Customer);","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/component/Customer/Customer.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getProfiles","CustomerItem","Customer","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,WAAF;AAAeG,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AACpER,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,OAAO,GACN,SADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mCAFF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACCF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,IAClB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,OAAO,CAACK,GAA3B;AAAgC,IAAA,OAAO,EAAEL,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CANF,CAJJ,CADF;AAwBD,CA7BD;;AA+BAD,QAAQ,CAACO,SAAT,GAAqB;AACnBT,EAAAA,WAAW,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADT;AAEnBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,cAAc,GAAGC,KAAK,KAAK;AAC/BX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADgB,CAAL,CAA5B;;AAIA,eAAeJ,OAAO,CAACc,cAAD,EAAiB;AAAEb,EAAAA;AAAF,CAAjB,CAAP,CAAyCE,QAAzC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../actions/CustomerProfile';\r\nimport CustomerItem from './CustomerItem';\r\n\r\nconst Customer = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        'spinner'\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Owners</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with Owners\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <CustomerItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4> Browsing...... </h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCustomer.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProp, { getProfiles })(Customer);\r\n"]},"metadata":{},"sourceType":"module"}