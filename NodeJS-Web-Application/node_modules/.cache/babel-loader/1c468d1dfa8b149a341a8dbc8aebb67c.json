{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\FYP\\\\Sawari\\\\Sawari\\\\client\\\\src\\\\component\\\\Sub-Admin\\\\Owner\\\\VehicleOwner.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentOwnerVehicle } from '../../../actions/Sub-Admin/OwnerProfile';\nimport VehicleItem from '../Vehicle/VehicleItem';\nimport Spinner from '../layout/spinner';\n\nconst VehicleOwner = ({\n  getCurrentOwnerVehicle,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentOwnerVehicle(profile.id);\n  }, [getCurrentOwnerVehicle, profile.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, loading ? Spinner : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"VehicleOwner\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"Browse and connect with VehicleOwner\")));\n};\n\nVehicleOwner.propTypes = {\n  getCurrentOwnerVehicle: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getCurrentOwnerVehicle\n})(VehicleOwner);","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/component/Sub-Admin/Owner/VehicleOwner.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getCurrentOwnerVehicle","VehicleItem","Spinner","VehicleOwner","profile","profiles","loading","id","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBH,EAAAA,sBADoB;AAEpBI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAFW,CAAD,KAGf;AACJT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,sBAAsB,CAACI,OAAO,CAACG,EAAT,CAAtB;AACD,GAFQ,EAEN,CAACP,sBAAD,EAAyBI,OAAO,CAACG,EAAjC,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,GACNJ,OADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,yCAFF,CAJJ,CADF;AAwBD,CAhCD;;AAkCAC,YAAY,CAACK,SAAb,GAAyB;AACvBR,EAAAA,sBAAsB,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADhB;AAEvBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAFH,CAAzB;;AAKA,MAAME,cAAc,GAAGC,KAAK,KAAK;AAC/BT,EAAAA,OAAO,EAAES,KAAK,CAACT;AADgB,CAAL,CAA5B;;AAIA,eAAeL,OAAO,CAACa,cAAD,EAAiB;AAAEZ,EAAAA;AAAF,CAAjB,CAAP,CACbG,YADa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentOwnerVehicle } from '../../../actions/Sub-Admin/OwnerProfile';\r\nimport VehicleItem from '../Vehicle/VehicleItem';\r\nimport Spinner from '../layout/spinner';\r\n\r\nconst VehicleOwner = ({\r\n  getCurrentOwnerVehicle,\r\n  profile: { profiles, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentOwnerVehicle(profile.id);\r\n  }, [getCurrentOwnerVehicle, profile.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        Spinner\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>VehicleOwner</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with VehicleOwner\r\n          </p>\r\n          {/* <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <VehicleItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4> {Spinner} </h4>\r\n            )}\r\n          </div> */}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nVehicleOwner.propTypes = {\r\n  getCurrentOwnerVehicle: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProp, { getCurrentOwnerVehicle })(\r\n  VehicleOwner\r\n);\r\n"]},"metadata":{},"sourceType":"module"}