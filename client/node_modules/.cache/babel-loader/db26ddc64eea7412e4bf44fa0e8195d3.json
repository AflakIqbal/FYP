{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\FYP\\\\Sawari\\\\Sawari\\\\client\\\\src\\\\component\\\\Sub-Admin\\\\Owner\\\\ranking.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentVehicleBookings } from '../../../actions/Sub-Admin/OwnerProfile';\nimport BookingItem from './BookingItem';\nimport Spinner from '../layout/spinner';\n\nconst Bookings = ({\n  getCurrentVehicleBookings,\n  profile: {\n    profiles,\n    loading\n  },\n  pro\n}) => {\n  useEffect(() => {\n    getCurrentVehicleBookings(pro.id);\n  }, [getCurrentVehicleBookings, pro.id]);\n  var rate = 0;\n  var count = 0;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, loading ? Spinner : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => rate = rate + profile.ownerFeedback.rating) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, Spinner), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"rate\"))));\n};\n\nBookings.propTypes = {\n  getCurrentVehicleBookings: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getCurrentVehicleBookings\n})(Bookings);","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/component/Sub-Admin/Owner/ranking.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getCurrentVehicleBookings","BookingItem","Spinner","Bookings","profile","profiles","loading","pro","id","rate","count","length","map","ownerFeedback","rating","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,yBAAT,QAA0C,yCAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBH,EAAAA,yBADgB;AAEhBI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAFO;AAGhBC,EAAAA;AAHgB,CAAD,KAIX;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,yBAAyB,CAACO,GAAG,CAACC,EAAL,CAAzB;AACD,GAFQ,EAEN,CAACR,yBAAD,EAA4BO,GAAG,CAACC,EAAhC,CAFM,CAAT;AAIA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,GACNJ,OADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACM,MAAT,GAAkB,CAAlB,GACCN,QAAQ,CAACO,GAAT,CACER,OAAO,IAAKK,IAAI,GAAGA,IAAI,GAAGL,OAAO,CAACS,aAAR,CAAsBC,MADlD,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,OAAL,CANJ,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF,CAJJ,CADF;AAqBD,CAhCD;;AAkCAC,QAAQ,CAACY,SAAT,GAAqB;AACnBf,EAAAA,yBAAyB,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADvB;AAEnBb,EAAAA,OAAO,EAAEN,SAAS,CAACoB,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,cAAc,GAAGC,KAAK,KAAK;AAC/BhB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB;AADgB,CAAL,CAA5B;;AAIA,eAAeL,OAAO,CAACoB,cAAD,EAAiB;AAAEnB,EAAAA;AAAF,CAAjB,CAAP,CAAuDG,QAAvD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentVehicleBookings } from '../../../actions/Sub-Admin/OwnerProfile';\r\nimport BookingItem from './BookingItem';\r\nimport Spinner from '../layout/spinner';\r\n\r\nconst Bookings = ({\r\n  getCurrentVehicleBookings,\r\n  profile: { profiles, loading },\r\n  pro\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentVehicleBookings(pro.id);\r\n  }, [getCurrentVehicleBookings, pro.id]);\r\n\r\n  var rate = 0;\r\n  var count = 0;\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        Spinner\r\n      ) : (\r\n        <Fragment>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(\r\n                profile => (rate = rate + profile.ownerFeedback.rating)\r\n              )\r\n            ) : (\r\n              <h4>{Spinner}</h4>\r\n            )}\r\n\r\n            <p>rate</p>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nBookings.propTypes = {\r\n  getCurrentVehicleBookings: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProp, { getCurrentVehicleBookings })(Bookings);\r\n"]},"metadata":{},"sourceType":"module"}