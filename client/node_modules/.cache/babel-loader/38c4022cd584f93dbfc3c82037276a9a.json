{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\FYP\\\\Sawari\\\\Sawari\\\\client\\\\src\\\\component\\\\Customer\\\\CustomerById.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions/CustomerProfile';\nimport Spinner from '../layout/spinner';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\n\nconst CustomerById = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"cusas\") // <Fragment>\n  //   {profile === null || loading ? (\n  //     <Spinner />\n  //   ) : (\n  //     <Fragment>\n  //       <Link to='/customer' className='btn btn-light'>\n  //         Back To Customers\n  //       </Link>\n  //       <div class='profile-grid my-1'>\n  //         <ProfileTop profile={profile} />\n  //       </div>\n  //     </Fragment>\n  //   )}\n  // </Fragment>\n  ;\n};\n\nCustomerById.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(CustomerById);","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/component/Customer/CustomerById.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getProfileById","Spinner","Link","ProfileTop","CustomerById","profile","loading","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBJ,EAAAA,cADoB;AAEpBK,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFW;AAGpBC,EAAAA,IAHoB;AAIpBC,EAAAA;AAJoB,CAAD,KAKf;AACJX,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACV,cAAD,EAAiBQ,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD,CA3BD;;AA4BAN,YAAY,CAACO,SAAb,GAAyB;AACvBX,EAAAA,cAAc,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADR;AAEvBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAFH;AAGvBN,EAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAHA,CAAzB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OADiB;AAEhCE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFoB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,YAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileById } from '../../actions/CustomerProfile';\r\nimport Spinner from '../layout/spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileTop from './ProfileTop';\r\n\r\nconst CustomerById = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <div>cusas</div>\r\n    // <Fragment>\r\n    //   {profile === null || loading ? (\r\n    //     <Spinner />\r\n    //   ) : (\r\n    //     <Fragment>\r\n    //       <Link to='/customer' className='btn btn-light'>\r\n    //         Back To Customers\r\n    //       </Link>\r\n    //       <div class='profile-grid my-1'>\r\n    //         <ProfileTop profile={profile} />\r\n    //       </div>\r\n    //     </Fragment>\r\n    //   )}\r\n    // </Fragment>\r\n  );\r\n};\r\nCustomerById.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(CustomerById);\r\n"]},"metadata":{},"sourceType":"module"}