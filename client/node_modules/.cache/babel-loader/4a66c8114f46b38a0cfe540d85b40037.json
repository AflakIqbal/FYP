{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\FYP\\\\Sawari\\\\Sawari\\\\client\\\\src\\\\component\\\\Sub-Admin\\\\Vehicle\\\\Vehicle.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../../actions/Sub-Admin/vehicleProfile';\nimport VehicleItem from './VehicleItem';\nimport Spinner from '../layout/spinner';\nimport { logout } from '../../../actions/Sub-Admin/auth';\n\nconst Vehicle = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  },\n  auth: {\n    isAuthenticated\n  },\n  logout\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  const ifLogedIn = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, loading ? Spinner : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Vehicles\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"Browse and connect with Vehicles\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(VehicleItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Browsing...... \"))));\n  return !loading && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, isAuthenticated ? ifLogedIn : '/dashboard');\n};\n\nVehicle.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getProfiles\n})(Vehicle);","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/component/Sub-Admin/Vehicle/Vehicle.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getProfiles","VehicleItem","Spinner","logout","Vehicle","profile","profiles","loading","auth","isAuthenticated","ifLogedIn","length","map","_id","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2CAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT,QAAuB,iCAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfJ,EAAAA,WADe;AAEfK,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAFM;AAGfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAHS;AAIfN,EAAAA;AAJe,CAAD,KAKV;AACJN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,QAAMU,SAAS,GACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GACNL,OADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,qCAFF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GACCL,QAAQ,CAACM,GAAT,CAAaP,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACQ,GAA1B;AAA+B,IAAA,OAAO,EAAER,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CANF,CAJJ,CADF;AAyBA,SACE,CAACE,OAAD,IACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWE,eAAe,GAAGC,SAAH,GAAe,YAAzC,CAFJ;AAKD,CAxCD;;AA0CAN,OAAO,CAACU,SAAR,GAAoB;AAClBd,EAAAA,WAAW,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADV;AAElBX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,MAAV,CAAiBD;AAFR,CAApB;;AAKA,MAAME,cAAc,GAAGC,KAAK,KAAK;AAC/Bd,EAAAA,OAAO,EAAEc,KAAK,CAACd;AADgB,CAAL,CAA5B;;AAIA,eAAeN,OAAO,CAACmB,cAAD,EAAiB;AAAElB,EAAAA;AAAF,CAAjB,CAAP,CAAyCI,OAAzC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../../actions/Sub-Admin/vehicleProfile';\r\nimport VehicleItem from './VehicleItem';\r\nimport Spinner from '../layout/spinner';\r\nimport { logout } from '../../../actions/Sub-Admin/auth';\r\n\r\nconst Vehicle = ({\r\n  getProfiles,\r\n  profile: { profiles, loading },\r\n  auth: { isAuthenticated },\r\n  logout\r\n}) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  const ifLogedIn = (\r\n    <Fragment>\r\n      {loading ? (\r\n        Spinner\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Vehicles</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with Vehicles\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <VehicleItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4> Browsing...... </h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    !loading && (\r\n      <Fragment>{isAuthenticated ? ifLogedIn : '/dashboard'}</Fragment>\r\n    )\r\n  );\r\n};\r\n\r\nVehicle.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProp, { getProfiles })(Vehicle);\r\n"]},"metadata":{},"sourceType":"module"}