{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Study\\\\FYP\\\\FYP\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Study\\\\FYP\\\\FYP\\\\client\\\\src\\\\component\\\\Admin\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst AdminPrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      _ref$auth = _ref.auth,\n      isAuthenticated = _ref$auth.isAuthenticated,\n      loading = _ref$auth.loading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? React.createElement(Redirect, {\n      to: \"/SubAdminLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nAdminPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProp)(AdminPrivateRoute);","map":{"version":3,"sources":["D:/Study/FYP/FYP/client/src/component/Admin/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","AdminPrivateRoute","Component","component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProp","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,iBAAiB,GAAG;AAAA,MACbC,SADa,QACxBC,SADwB;AAAA,uBAExBC,IAFwB;AAAA,MAEhBC,eAFgB,aAEhBA,eAFgB;AAAA,MAECC,OAFD,aAECA,OAFD;AAAA,MAGrBC,IAHqB;;AAAA,SAKxB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IACX,CAACH,eAAD,IAAoB,CAACC,OAArB,GACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAGE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALwB;AAAA,CAA1B;;AAiBAP,iBAAiB,CAACQ,SAAlB,GAA8B;AAC5BL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADK,CAA9B;;AAIA,MAAMC,cAAc,GAAGC,KAAK,KAAK;AAC/BT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADmB,CAAL,CAA5B;;AAGA,eAAeJ,OAAO,CAACY,cAAD,CAAP,CAAwBX,iBAAxB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AdminPrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/SubAdminLogin' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nAdminPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProp)(AdminPrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}