{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, GET_PROFILE, SUBADMIN_VEHICLE_DELETED } from './types'; // Get all current profile\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/subAdmin/viewOwner');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR //payload: { msg: err.response.statustext, status: err.response.status }\n\n    });\n  }\n}; // Get all profile by id\n\nexport const getProfileById = userID => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/subAdmin/viewOwnerById/\".concat(userID));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR //payload: { msg: err.response.statustext, status: err.response.status }\n\n    });\n  }\n}; // Get all current Owner Vehicle\n\nexport const getCurrentOwnerVehicle = userID => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/subAdmin/viewByOwnerId/\".concat(userID));\n    console.log(res);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR //payload: { msg: err.response.statustext, status: err.response.status }\n\n    });\n  }\n}; // Get all booking of Owner\n\nexport const getCurrentVehicleBookings = userID => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/subAdmin/viewVehicleBookings/\".concat(userID));\n    console.log(userID);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR //payload: { msg: err.response.statustext, status: err.response.status }\n\n    });\n  }\n}; // Delete vehicle for subadmin\n\nexport const deleteOwnerForSubAdmin = ownerId => async dispatch => {\n  if (window.confirm('Are you sure? This can not be undone')) {\n    try {\n      await axios.delete(\"/api/subAdmin/deleteOwner/\".concat(ownerId));\n      dispatch({\n        type: SUBADMIN_VEHICLE_DELETED,\n        payload: ownerId\n      });\n      dispatch(setAlert('Owner deleted', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statustext,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["D:/Study/FYP/Sawari/Sawari/client/src/actions/Sub-Admin/OwnerProfile.js"],"names":["axios","setAlert","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","GET_PROFILE","SUBADMIN_VEHICLE_DELETED","getProfiles","dispatch","type","res","get","payload","data","err","getProfileById","userID","getCurrentOwnerVehicle","console","log","getCurrentVehicleBookings","deleteOwnerForSubAdmin","ownerId","window","confirm","delete","msg","response","statustext","status"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILE,\r\n  SUBADMIN_VEHICLE_DELETED\r\n} from './types';\r\n\r\n// Get all current profile\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/subAdmin/viewOwner');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR\r\n      //payload: { msg: err.response.statustext, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profile by id\r\nexport const getProfileById = userID => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/subAdmin/viewOwnerById/${userID}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR\r\n      //payload: { msg: err.response.statustext, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get all current Owner Vehicle\r\nexport const getCurrentOwnerVehicle = userID => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/subAdmin/viewByOwnerId/${userID}`);\r\n    console.log(res);\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR\r\n      //payload: { msg: err.response.statustext, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get all booking of Owner\r\nexport const getCurrentVehicleBookings = userID => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get(`/api/subAdmin/viewVehicleBookings/${userID}`);\r\n    console.log(userID);\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR\r\n      //payload: { msg: err.response.statustext, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete vehicle for subadmin\r\nexport const deleteOwnerForSubAdmin = ownerId => async dispatch => {\r\n  if (window.confirm('Are you sure? This can not be undone')) {\r\n    try {\r\n      await axios.delete(`/api/subAdmin/deleteOwner/${ownerId}`);\r\n\r\n      dispatch({\r\n        type: SUBADMIN_VEHICLE_DELETED,\r\n        payload: ownerId\r\n      });\r\n\r\n      dispatch(setAlert('Owner deleted', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statustext, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}